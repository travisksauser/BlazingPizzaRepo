@inject OrderState OrderState 

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly" Context="routeData">
        <Found>
            <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(MainLayout)">
                <NotAuthorized>
                    <div class="main">
                        <h2>You're signed out</h2>
                        <p>To continue, please sign in.</p>
                        <a class="btn btn-danger" href="user/signin">Sign in</a>
                        <a href="user/signin/guest" class="btn btn-outline-danger">Continue as Guest</a>

                        <div class="checkout-signin">
                            <a href="user/signin?signInService=Facebook" class="loginBtn loginBtn--facebook">Login with Facebook</a>
                            <a href="user/signin?signInService=Google" class="loginBtn loginBtn--google">Login with Google</a>
                            <a href="user/signin?signInService=Twitter" class="loginBtn loginBtn--twitter">Login with Twitter</a>
                        </div>
                    </div>
                </NotAuthorized>
                <Authorizing>
                    Please wait...
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(MainLayout)">
                <div class="main">Page not found</div>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

<style>
    .checkout-signin{
        display:table-cell;
        width: 239px;
    }
</style>


@code {
    bool signinpage { get; set; } = false;

    public void signpage()
    {
        signinpage = true;
    }

    public LoginDisplay LoginDisplay { get; set; }

}